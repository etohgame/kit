{"searchDocs":[{"title":"ScopeCommunicator","type":0,"sectionRef":"#","url":"/kit/api/ScopeCommunicator","content":"ScopeCommunicator This item only works when running on the client. Client Scope Communicator","keywords":"","version":null},{"title":"EffectGuiManager","type":0,"sectionRef":"#","url":"/kit/api/EffectGuiManager","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"EffectGuiManager","url":"/kit/api/EffectGuiManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"CreateBoostTimer​","type":1,"pageTitle":"EffectGuiManager","url":"/kit/api/EffectGuiManager#CreateBoostTimer","content":"&lt;/&gt; EffectGuiManager:CreateBoostTimer(boostType: string) → TextLabel  Creates and returns a boost timer label for the given boostType. The color for every type is defined in the BOOST_COLORS table. ","version":null,"tagName":"h3"},{"title":"Lighting","type":0,"sectionRef":"#","url":"/kit/api/Lighting","content":"Lighting This item only works when running on the client. Client A table of utility functions that can be used to speed up the process of writing repository scripts for client objects.","keywords":"","version":null},{"title":"Config","type":0,"sectionRef":"#","url":"/kit/api/Config","content":"Config This item only works when running on the client. Client A table of utility functions that can be used to speed up the process of writing repository scripts for client objects.","keywords":"","version":null},{"title":"JumpButton","type":0,"sectionRef":"#","url":"/kit/api/JumpButton","content":"JumpButton This item only works when running on the client. Client A table of utility functions that can be used to speed up the process of writing repository scripts for client objects.","keywords":"","version":null},{"title":"ClientObjectManager","type":0,"sectionRef":"#","url":"/kit/api/ClientObjectManager","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ClientObjectManager","url":"/kit/api/ClientObjectManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"LoadClientObjects​","type":1,"pageTitle":"ClientObjectManager","url":"/kit/api/ClientObjectManager#LoadClientObjects","content":"&lt;/&gt; ClientObjectManager:LoadClientObjects( from: Instance, target: Instance, towerRepository: Instance? ) → () Loads the client objects found in from into the target, setting them up and running their respective repository scripts. towerRepository determines where the repository scripts for COs will be retrieved from. If not set, this will default to Framework.Kit.Repository. ","version":null,"tagName":"h3"},{"title":"FlipManager","type":0,"sectionRef":"#","url":"/kit/api/FlipManager","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"FlipManager","url":"/kit/api/FlipManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"Flip​","type":1,"pageTitle":"FlipManager","url":"/kit/api/FlipManager#Flip","content":"&lt;/&gt; FlipManager:Flip() → () Performs a corner flip on any flip parts the player is touching. Parts can be marked as flip parts by: Adding a Tag or Instance inside the part called CanFlip Adding a callback on the part with FlipManager:BindToFlip()  ","version":null,"tagName":"h3"},{"title":"BindToFlip​","type":1,"pageTitle":"FlipManager","url":"/kit/api/FlipManager#BindToFlip","content":"&lt;/&gt; FlipManager:BindToFlip( part: BasePart , callback: () → () ) → () Binds the callback function to the part, executing the callback when the player performs a corner flip on it. ","version":null,"tagName":"h3"},{"title":"LightingManager","type":0,"sectionRef":"#","url":"/kit/api/LightingManager","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"LightingManager","url":"/kit/api/LightingManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"ChangeLighting​","type":1,"pageTitle":"LightingManager","url":"/kit/api/LightingManager#ChangeLighting","content":"&lt;/&gt; LightingManager:ChangeLighting(config: _TDefs.LightingConfiguration) → () ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"LightingManager","url":"/kit/api/LightingManager##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"LightingManager","url":"/kit/api/LightingManager#LightingConfiguration","content":"interface LightingConfiguration { Type: string Configuration: Default | {[string]: any} TweenInfo: TweenInfo? UseDefault: string? SetDefault: string? }  Changes the active lighting based on the given config. TODO explain more  ","version":null,"tagName":"h3"},{"title":"ResetLighting​","type":1,"pageTitle":"LightingManager","url":"/kit/api/LightingManager#ResetLighting","content":"&lt;/&gt; LightingManager:ResetLighting() → () Resets all lighting properties back to their default state.  ","version":null,"tagName":"h3"},{"title":"DeregisterPreset​","type":1,"pageTitle":"LightingManager","url":"/kit/api/LightingManager#DeregisterPreset","content":"&lt;/&gt; LightingManager:DeregisterPreset(preset: string) → () Removes the registered preset from the lighting template list. Used when the client object folder unloads. TODO explain more ","version":null,"tagName":"h3"},{"title":"ScopeConstructor","type":0,"sectionRef":"#","url":"/kit/api/ScopeConstructor","content":"ScopeConstructor This item only works when running on the client. Client Scope","keywords":"","version":null},{"title":"ScopeUtil","type":0,"sectionRef":"#","url":"/kit/api/ScopeUtil","content":"ScopeUtil This item only works when running on the client. Client A table of utility functions that can be used to speed up the process of writing repository scripts for client objects.","keywords":"","version":null},{"title":"Property","type":0,"sectionRef":"#","url":"/kit/api/Property","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Property","url":"/kit/api/Property#functions","content":" ","version":null,"tagName":"h2"},{"title":"getPropertySafe​","type":1,"pageTitle":"Property","url":"/kit/api/Property#getPropertySafe","content":"shorthand &lt;/&gt; Property.getPropertySafe( instance: any, property: string ) → ( any, boolean ) Safely gets a property of an object. Will return nil if the property does not exist, or if any errors occur.  ","version":null,"tagName":"h3"},{"title":"setPropertySafe​","type":1,"pageTitle":"Property","url":"/kit/api/Property#setPropertySafe","content":"shorthand &lt;/&gt; Property.setPropertySafe( instance: any, property: string, value: any ) → boolean Safely sets a property of an object.  ","version":null,"tagName":"h3"},{"title":"assureValueType​","type":1,"pageTitle":"Property","url":"/kit/api/Property#assureValueType","content":"shorthand &lt;/&gt; Property.assureValueType( value: unknown, default: defaultType ) → defaultType Checks if value and default are of the same type. If not, it will return the default value.  ","version":null,"tagName":"h3"},{"title":"assureConfig​","type":1,"pageTitle":"Property","url":"/kit/api/Property#assureConfig","content":"shorthand &lt;/&gt; Property.assureConfig( instance: Instance, configName: string, default: defaultType ) → defaultType Shorthand for utility.assureValueType(instance:GetAttribute(configName), default) ","version":null,"tagName":"h3"},{"title":"Gui","type":0,"sectionRef":"#","url":"/kit/api/Gui","content":"Gui This item only works when running on the client. Client A table of utility functions that can be used to speed up the process of writing repository scripts for client objects.","keywords":"","version":null},{"title":"Character","type":0,"sectionRef":"#","url":"/kit/api/Character","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Character","url":"/kit/api/Character#functions","content":" ","version":null,"tagName":"h2"},{"title":"getHitbox​","type":1,"pageTitle":"Character","url":"/kit/api/Character#getHitbox","content":"&lt;/&gt; Character.getHitbox( mode: string, params: OverlapParams? ) → {BasePart } Returns a static hitbox attached to the character based on the provided mode. These hitboxes ignore animations and as such should be more consistent. Supported hitbox types: RootPart - HumanoidRootPart only StaticWholeBody - Character's entire body StaticCenter - Character's entire body, excluding arms StaticArms - Arms &amp; torso only There are more hitbox types that include the character's actual limbs, note that these do not ignore animations: WholeBody - All limbs Center - All limbs, excluding the arms  ","version":null,"tagName":"h3"},{"title":"carryPart​","type":1,"pageTitle":"Character","url":"/kit/api/Character#carryPart","content":"&lt;/&gt; Character.carryPart( weldState: boolean, weldTo: BasePart ) → () Makes the character carry the weldTo part, welding it to the character and displaying a carry animation on the character. The carry animation manipulates the character's shoulders directly instead of using an Animation, so it should work everywhere. If weldState is false, the character will stop carrying the part and the carry animation will stop. ","version":null,"tagName":"h3"},{"title":"Balloons","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/balloons","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Balloons","url":"/kit/docs/client-objects/balloons#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Balloons","url":"/kit/docs/client-objects/balloons#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Instance","type":0,"sectionRef":"#","url":"/kit/api/Instance","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Instance","url":"/kit/api/Instance#functions","content":" ","version":null,"tagName":"h2"},{"title":"isPointer​","type":1,"pageTitle":"Instance","url":"/kit/api/Instance#isPointer","content":"&lt;/&gt; Instance.isPointer(object: Instance?) → () Returns whether the object is a module pointer. Module pointers are used for things such as module-based object configurations to help reduce memory usage when requiring them.  ","version":null,"tagName":"h3"},{"title":"getPointer​","type":1,"pageTitle":"Instance","url":"/kit/api/Instance#getPointer","content":"&lt;/&gt; Instance.getPointer(object: Instance?) → Instance? If the given object is a pointer, this function will return it's value. Otherwise, it will just return the object that was passed in. ","version":null,"tagName":"h3"},{"title":"Beat Blocks","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/beat-blocks","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Beat Blocks","url":"/kit/docs/client-objects/beat-blocks#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Beat Blocks","url":"/kit/docs/client-objects/beat-blocks#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Bounce Pads","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/bounce-pads","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Bounce Pads","url":"/kit/docs/client-objects/bounce-pads#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Bounce Pads","url":"/kit/docs/client-objects/bounce-pads#configuration","content":" Name\tDefault Value\tDescriptionCooldown\t0.05\tDelay between being able to use the Bounce Pad again. Power\t100\tThe power the bounce pad will launch objects at. RelativeForce\tfalse\tWhen true, interacting parts will be launched in the direction the bounce pad is facing. Otherwise, they will launch directly upwards no matter the rotation of the pad. ","version":"Next","tagName":"h2"},{"title":"Boosters","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/boosters","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Boosters","url":"/kit/docs/client-objects/boosters#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Boosters","url":"/kit/docs/client-objects/boosters#configuration","content":" Name\tDefault Value\tDescriptionMode\tDefault\tThe mode of the booster. See the Modes section below for more details Type\tSpeed\tThe type of the boost. See the Types section below for more details Power\t50\tThe power of the boost. See the Types section below for more details Duration\t5\tDuration of the boost in seconds. If set to 0, the boost will be infinite until removed. TimerDecimals\t1\tThe amount of decimals to show on the boost timer.  ","version":"Next","tagName":"h2"},{"title":"Types​","type":1,"pageTitle":"Boosters","url":"/kit/docs/client-objects/boosters#types","content":" Type\tHumanoid Property affected\tDefault ValueSpeed\tWalkSpeed\t16 Jump\tJumpPower\t50  ","version":"Next","tagName":"h2"},{"title":"Modes​","type":1,"pageTitle":"Boosters","url":"/kit/docs/client-objects/boosters#modes","content":" Mode\tDescriptionDefault\tBooster will behave as normal. Boost can only be removed by a Boost Remover or by letting the timer expire. Zone\tThe boost will automatically end once the player stops interacting with the booster. ","version":"Next","tagName":"h2"},{"title":"Table","type":0,"sectionRef":"#","url":"/kit/api/Table","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Table","url":"/kit/api/Table#functions","content":" ","version":null,"tagName":"h2"},{"title":"Copy​","type":1,"pageTitle":"Table","url":"/kit/api/Table#Copy","content":"&lt;/&gt; Table.Copy( item: Arrayofitemstosplice, min: Startingindexofsplice, max: Endingindexofsplice ) → ()  ","version":null,"tagName":"h3"},{"title":"Button Deactivators","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/button-deactivators","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Button Deactivators","url":"/kit/docs/client-objects/button-deactivators#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Button Deactivators","url":"/kit/docs/client-objects/button-deactivators#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Boost Pads","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/boost-pads","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Boost Pads","url":"/kit/docs/client-objects/boost-pads#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Boost Pads","url":"/kit/docs/client-objects/boost-pads#configuration","content":" For the Type and Power settings, see Boosters  Name\tDefault Value\tDescriptionType\tSpeed\tThe type of the boost Power\t50\tThe power of the boost Distance\t10\tHow far above the boost pad the boost will be active, measured in studs ","version":"Next","tagName":"h2"},{"title":"CharacterManager","type":0,"sectionRef":"#","url":"/kit/api/CharacterManager","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#types","content":" ","version":null,"tagName":"h2"},{"title":"BoostData​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#BoostData","content":"&lt;/&gt; interface BoostData { startTime: number mode: string type: string power: number duration: number timerDecimals: number startTweenInfo: TweenInfo endTweenInfo: TweenInfo }  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"ValidateDamageBrick​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#ValidateDamageBrick","content":"&lt;/&gt; CharacterManager:ValidateDamageBrick(brick: BasePart ) → () Function internally used to validate a damage brick's damage value. This also checks whether the damage brick is deactivated or not.  ","version":null,"tagName":"h3"},{"title":"Damage​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#Damage","content":"&lt;/&gt; CharacterManager:Damage(damage: BasePart | string | number) → () Fires the DamageEvent with the given damage value. damage can be either a number, or a string representing a key in the VALID_DAMAGEBRICKS table.  ","version":null,"tagName":"h3"},{"title":"GetHumanoid​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#GetHumanoid","content":"&lt;/&gt; CharacterManager:GetHumanoid(player: Player ) → Humanoid?  Returns the player's Humanoid if it exists.  ","version":null,"tagName":"h3"},{"title":"StartBoost​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#StartBoost","content":"&lt;/&gt; CharacterManager:StartBoost(boostData: _TDefs.BoostData) → () Starts a boost with the given boost data. If a boost with the given type is already active, the already active boost will be refreshed instead of a new boost being started.  ","version":null,"tagName":"h3"},{"title":"UpdateBoost​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#UpdateBoost","content":"&lt;/&gt; CharacterManager:UpdateBoost( boostData: _TDefs.BoostData, boostEnded: boolean? ) → () Updates the currently active boost with the given type, updating the affected property. If boostEnded is true, the character will return to it's default properties rather than using the boost's power.  ","version":null,"tagName":"h3"},{"title":"RemoveBoost​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#RemoveBoost","content":"&lt;/&gt; CharacterManager:RemoveBoost(boostType: string) → () Ends the currently active boost with the given type.  ","version":null,"tagName":"h3"},{"title":"GetActiveBoosts​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#GetActiveBoosts","content":"&lt;/&gt; CharacterManager:GetActiveBoosts() → {[string]: _TDefs.BoostData?} Returns a table containing the currently active boosts.  ","version":null,"tagName":"h3"},{"title":"ActivateBoostPad​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#ActivateBoostPad","content":"&lt;/&gt; CharacterManager:ActivateBoostPad( boostType: string, power: number ) → () Activates a boost pad with the given boostType and power.  ","version":null,"tagName":"h3"},{"title":"UpdateBoostPad​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#UpdateBoostPad","content":"&lt;/&gt; CharacterManager:UpdateBoostPad( boostType: string, power: number ) → () Updates a boost pad's boost with the given boostType and number, updating the affected property accordingly.  ","version":null,"tagName":"h3"},{"title":"DeactivateBoostPad​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#DeactivateBoostPad","content":"&lt;/&gt; CharacterManager:DeactivateBoostPad(boostType: string) → () Deactivates a boost pad with the given boostType. If a regular booster is currently active, the player will revert to that booster's power. Otherwise, the player will revert to the default power.  ","version":null,"tagName":"h3"},{"title":"GetActiveBoostPads​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#GetActiveBoostPads","content":"&lt;/&gt; CharacterManager:GetActiveBoostPads() → {[string]: number?} Returns a table containing the currently active boost pads, with the key being the boost's type and the value being the boost's power. ","version":null,"tagName":"h3"},{"title":"Conveyors","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/conveyors","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Conveyors","url":"/kit/docs/client-objects/conveyors#use-cases","content":" Conveyors are useful for quickly moving objects to different places, and they can also be used as obstacles the player has to avoid.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Conveyors","url":"/kit/docs/client-objects/conveyors#configuration","content":" Name\tDefault Value\tDescriptionSpeed\t10\tThe speed the conveyor will move objects at, measured in studs per second ","version":"Next","tagName":"h2"},{"title":"Attachers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/attachers","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Attachers","url":"/kit/docs/client-objects/attachers#use-cases","content":" Attaching objects (e.g. trails, lights, or spinning killbricks) to the object that interacted with the attacher.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Attachers","url":"/kit/docs/client-objects/attachers#configuration","content":" Name\tDefault Value\tDescriptionAttachUsingAlign\ttrue\tIf false, uses a WeldConstraint to attach the PrimaryPart. Otherwise, it uses an AlignOrientation and AlignPosition object. CleanDelay\t3\tTime in seconds to wait before cleaning up attachment objects after dismount. Cooldown\t0.5\tTime in seconds to wait before the Attacher can activate again DismountState\tEnum.HumanoidStateType.Jumping\tThe humanoid state that will trigger a dismount. Some dismount states are not allowed, as they never trigger. In those cases, use Enum.HumanoidStateType.None DismountStateEnabled\ttrue\tWhether the dismount state check is enabled. Offset\tCFrame.new(0, 0, -5)\tOffset applied to the primary part when attaching. WeldToLimb\tEnum.Limb.Torso\tThe limb to attach the object to. Ignored if the target is not a player. ","version":"Next","tagName":"h2"},{"title":"Keys","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/keys","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Keys","url":"/kit/docs/client-objects/keys#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Keys","url":"/kit/docs/client-objects/keys#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Jump Launchers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/jump-launcher","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Jump Launchers","url":"/kit/docs/client-objects/jump-launcher#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Jump Launchers","url":"/kit/docs/client-objects/jump-launcher#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Elevators","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/elevators","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Elevators","url":"/kit/docs/client-objects/elevators#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Elevators","url":"/kit/docs/client-objects/elevators#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Morphers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/morphers","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Morphers","url":"/kit/docs/client-objects/morphers#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Morphers","url":"/kit/docs/client-objects/morphers#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Pushbox Destroyers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/pushbox-destroyers","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Pushbox Destroyers","url":"/kit/docs/client-objects/pushbox-destroyers#use-cases","content":" Pushbox destroyers can be used to destroy Pushboxes or contraptions parented within a Pushbox model.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Pushbox Destroyers","url":"/kit/docs/client-objects/pushbox-destroyers#configuration","content":" Name\tDefault Value\tDescriptionColorSpecific\tfalse\tWhen true, the Pushbox part that touches the destroyer must match the destroyer's color for it to be destroyed. DestroyWholeModel\tfalse\tWhen true, the entire Pushbox model will be destroyed upon touch. Otherwise, only the part that touched the destroyer will be destroyed. ","version":"Next","tagName":"h2"},{"title":"Emitters","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/emitters","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Emitters","url":"/kit/docs/client-objects/emitters#use-cases","content":" Emitters can be used for cinematic effects and gameplay cues.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Emitters","url":"/kit/docs/client-objects/emitters#configuration","content":" Name\tDefault Value\tDescriptionGlobalSound\ttrue\tWhether Sound instances should play globally or spatially from the Emitter. Uses\tInfinite\tHow many times the Emitter can be used. Every time the emitter is used, the Uses attribute is decremented. Cooldown\t1\tHow long, in seconds, will the Emitter wait before it can be used again. ","version":"Next","tagName":"h2"},{"title":"Music Zone Editors","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/music-zone-editors","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Music Zone Editors","url":"/kit/docs/client-objects/music-zone-editors#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Music Zone Editors","url":"/kit/docs/client-objects/music-zone-editors#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Functions","type":0,"sectionRef":"#","url":"/kit/api/Functions","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Functions","url":"/kit/api/Functions#functions","content":" ","version":null,"tagName":"h2"},{"title":"generateUID​","type":1,"pageTitle":"Functions","url":"/kit/api/Functions#generateUID","content":"shorthand &lt;/&gt; Functions.generateUID(curlyBraces: boolean?) → string Shorthand for HttpService:GenerateGUID(). utility.generateUID() --&gt; 4BA80F4637244B4BBA957E28B9443DE9   ","version":null,"tagName":"h3"},{"title":"tween​","type":1,"pageTitle":"Functions","url":"/kit/api/Functions#tween","content":"shorthand &lt;/&gt; Functions.tween( instance: Instance, config: number | typeof(Config.TWEEN_CONFIG), goal: {[string]: any}, easingStyle: Enum.EasingStyle?,-- EasingStyle easingDirection: Enum.EasingDirection?,-- EasingDirection ...: any ) → Tween  Simple tween function that handles garbage collection properly. utility.tween(part, 0.5, { Color = Color3.fromRGB(255, 0, 0) })   ","version":null,"tagName":"h3"},{"title":"playSoundFromInstance​","type":1,"pageTitle":"Functions","url":"/kit/api/Functions#playSoundFromInstance","content":"&lt;/&gt; Functions.playSoundFromInstance( instance: Instance, container: Instance, soundName: string ) → Sound?  Plays a sound with the given soundName from the given container at the instance's location.  ","version":null,"tagName":"h3"},{"title":"roundColor​","type":1,"pageTitle":"Functions","url":"/kit/api/Functions#roundColor","content":"shorthand &lt;/&gt; Functions.roundColor(color: Color3 ) → Color3  Rounds the provided color to remedy rounding errors that cause issues on some devices when comparing two Color3 values.  ","version":null,"tagName":"h3"},{"title":"yieldTimeout​","type":1,"pageTitle":"Functions","url":"/kit/api/Functions#yieldTimeout","content":"&lt;/&gt; Functions.yieldTimeout( timeout: number, fn: (A...) → T..., ...: A... ) → T... TODO explain this (IDK lol) ","version":null,"tagName":"h3"},{"title":"Dismounters","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/dismounters","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Dismounters","url":"/kit/docs/client-objects/dismounters#use-cases","content":" Dismounters can be used to forcefully dismount the player from mounts.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Dismounters","url":"/kit/docs/client-objects/dismounters#configuration","content":" Name\tDefault Value\tDescriptionCooldown\t0\tDelay between being able to use the Dismounter. MountColorSpecific\tfalse\tWhen true, the mount's color must match the Dismounter's color in order to be activated. DismountAttachers\ttrue\tWhen true, the Dismounter can dismount you from Attachers. DismountBalloons\ttrue\tWhen true, the Dismounter can dismount you from Balloons. DismountSeats\ttrue\tWhen true, the Dismounter can dismount you from Seats. DismountSwings\ttrue\tWhen true, the Dismounter can dismount you from Swings. DismountVines\ttrue\tWhen true, the Dismounter can dismount you from Vines. DismountZiplines\ttrue\tWhen true, the Dismounter can dismount you from Ziplines. ","version":"Next","tagName":"h2"},{"title":"GradientParts","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/gradient-parts","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"GradientParts","url":"/kit/docs/client-objects/gradient-parts#use-cases","content":" GradientParts can be used for decoration, such as the rainbow parts shown in Citadel of Void.  Unlike Beam instances, which uses a texture, the Color of GradientParts are uniform.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"GradientParts","url":"/kit/docs/client-objects/gradient-parts#configuration","content":" Name\tDefault Value\tDescriptionDistanceAnchor\t100\tThe furthest the player can be from it's DistancePivot to shift colors Speed\t60\tHow long, in seconds, to fully cycle colors from the UIGradient. ","version":"Next","tagName":"h2"},{"title":"ClientObjects","type":0,"sectionRef":"#","url":"/kit/api/ClientObjects","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#functions","content":" ","version":null,"tagName":"h2"},{"title":"isButtonActivatedPlatform​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#isButtonActivatedPlatform","content":"shorthand &lt;/&gt; ClientObjects.isButtonActivatedPlatform(platform: Instance) → boolean This function is used to check if the provided Instance is a ButtonActivatedPlatform. This will return true if it is a BasePart and meets one of the following requirements: Is named ButtonActivatedPlatform Has a tag named ButtonActivated  ","version":null,"tagName":"h3"},{"title":"isBalloon​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#isBalloon","content":"shorthand &lt;/&gt; ClientObjects.isBalloon( parent: Instance, doNotCheckAncestor: boolean? ) → boolean This function is used to check if the provided Instance is part of a dispensed Balloon. This will return true if it meets one of the following requirements: Is named BalloonModel If doNotCheckAncestor is not true and the Instance has an ancestor named BalloonModel   ","version":null,"tagName":"h3"},{"title":"isTurret​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#isTurret","content":"shorthand &lt;/&gt; ClientObjects.isTurret( parent: Instance, doNotCheckAncestor: boolean? ) → boolean This function is used to check if the provided Instance is part of a Turret's bullet. This will return true if it meets one of the following requirements: Is named Bullet If doNotCheckAncestor is not true and the Instance has an ancestor named Bullet   ","version":null,"tagName":"h3"},{"title":"isPushbox​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#isPushbox","content":"shorthand &lt;/&gt; ClientObjects.isPushbox( parent: Instance, doNotCheckAncestor: boolean? ) → boolean This function is used to check if the provided Instance is part of a Pushbox. This will return true if it meets one of the following requirements: Is named Pushbox Has a tag named IsBox If doNotCheckAncestor is not true and the Instance has an ancestor named Pushbox   ","version":null,"tagName":"h3"},{"title":"evaluateToucher​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#evaluateToucher","content":"&lt;/&gt; ClientObjects.evaluateToucher( part: BasePart , toucher: BasePart , config: (Instance | typeof(Config.TOUCH_CONFIG))? ) → boolean This function checks if two BaseParts (part and toucher) touching is considered valid or not, based on the provided config. A touch configuration has the following settings: player: Valid if toucher is part of the player's character pushbox: Valid if ClientObjects.isPushbox returns true balloon: Valid if ClientObjects.isBalloon returns true turret: Valid if ClientObjects.isTurret returns true colorSpecific: For every setting except player, toucher's color must match part's color for the collision to be considered valid.   ","version":null,"tagName":"h3"},{"title":"bindToFlip​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#bindToFlip","content":"&lt;/&gt; ClientObjects.bindToFlip( part: BasePart , callback: () → () ) → () → () Binds the callback function to the part, executing the callback when the player performs a corner flip on it.  ","version":null,"tagName":"h3"},{"title":"isInstanceActive​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#isInstanceActive","content":"&lt;/&gt; ClientObjects.isInstanceActive( scope: Scope, instance: Instance, ignoreList: {[string]: boolean}? ) → boolean Returns whether the provided Instance is active or not. TODO explain more  ","version":null,"tagName":"h3"},{"title":"listenInstanceActive​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#listenInstanceActive","content":"&lt;/&gt; ClientObjects.listenInstanceActive( scope: Scope, instance: Instance, ignoreList: {[string]: boolean}?, callback: (active: boolean) → () ) → () → () Listens to the Instance's activeness, executing the callback when it's activeness changes.  ","version":null,"tagName":"h3"},{"title":"setInstanceActive​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#setInstanceActive","content":"&lt;/&gt; ClientObjects.setInstanceActive( scope: Scope, instance: Instance, key: string, active: boolean ) → () Sets the Instance's activeness based on active. Instances can have multiple activeness states, dictated by the key parameter.  ","version":null,"tagName":"h3"},{"title":"scanFolder​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#scanFolder","content":"&lt;/&gt; ClientObjects.scanFolder( targetScope: Scope, path: Instance, doNotIgnoreObjects: boolean?, targetPath: Instance? ) → () TODO explain this (idk the specifics of what it does) ","version":null,"tagName":"h3"},{"title":"Moving Platforms","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/moving-platforms","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Moving Platforms","url":"/kit/docs/client-objects/moving-platforms#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Moving Platforms","url":"/kit/docs/client-objects/moving-platforms#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Property Changers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/property-changers","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Property Changers","url":"/kit/docs/client-objects/property-changers#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Property Changers","url":"/kit/docs/client-objects/property-changers#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Sequencers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/sequencer","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Sequencers","url":"/kit/docs/client-objects/sequencer#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Sequencers","url":"/kit/docs/client-objects/sequencer#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Swings","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/swings","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Swings","url":"/kit/docs/client-objects/swings#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Swings","url":"/kit/docs/client-objects/swings#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Teleporters","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/teleporters","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Teleporters","url":"/kit/docs/client-objects/teleporters#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Teleporters","url":"/kit/docs/client-objects/teleporters#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Pushbox Spawners","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/pushbox-spawners","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Pushbox Spawners","url":"/kit/docs/client-objects/pushbox-spawners#use-cases","content":" Pushbox spawners can be used to spawn a box that can be pushed around, or to reset a contraption parented inside the Pushbox model.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Pushbox Spawners","url":"/kit/docs/client-objects/pushbox-spawners#configuration","content":" Name\tDefault Value\tDescriptionCooldown\t0.5\tDelay between being able to respawn the Pushbox group. DontSpawnFirst\ttrue\tWhen true, the Pushbox group will not automatically spawn when the spawner loads. The button must be pressed for it to spawn. ","version":"Next","tagName":"h2"},{"title":"Overview","type":0,"sectionRef":"#","url":"/kit/docs/intro","content":"Overview","keywords":"","version":"Next"},{"title":"One-Way Platforms","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/one-way-platform","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"One-Way Platforms","url":"/kit/docs/client-objects/one-way-platform#use-cases","content":" One-way platforms are useful for making mechanics such as platforms that you can jump through from the bottom, or trapdoors that the player can fall through but not jump back up onto.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"One-Way Platforms","url":"/kit/docs/client-objects/one-way-platform#configuration","content":" This client object has no configurable properties. ","version":"Next","tagName":"h2"},{"title":"Buttons","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/buttons","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#use-cases","content":" Buttons may be used to create toggleable parts and objects, or to display text on the player's screen.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#configuration","content":" ","version":"Next","tagName":"h2"},{"title":"PressedMaterial​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#pressedmaterial","content":" The Material of the Button when pressed. Neon by default.  ","version":"Next","tagName":"h3"},{"title":"PressOffset​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#pressoffset","content":" Consists of two Vector3 values, Position and Orientation. Position is the offset, in Studs, of the ButtonPart. Orientation is the offset, in degrees, of the ButtonPart. The time it takes for the ButtonPart to reach the Position and Orientation may be determined via a TweenConfiguration.  ","version":"Next","tagName":"h3"},{"title":"Timer​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#timer","content":" The time, in seconds, a Button remains pressed before returning to the unpressed state. If positive, it will display the remaining time on a SurfaceGui on the Top surface of the ButtonPart as well as a ScreenGui on the player's screen. By default, Buttons do not have timers.  ","version":"Next","tagName":"h3"},{"title":"TimerDecimalPlaces​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#timerdecimalplaces","content":" The number of decimal places displayed by any timer displays.  ","version":"Next","tagName":"h3"},{"title":"TimerText​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#timertext","content":" The text that appears on any timer display. Can be any string. Below are special codes that are replaced within the string automatically. If blank, it simply shows the remaining time left on the timer.  Code\tReplaced with:{T}\tThe time left on the timer, modified with TimerDecimalPlaces {S}\tAn &quot;s&quot; if there's more than one second left (like &quot;seconds&quot;), or empty otherwise. If TimerDecimalPlaces is not 0, it is always an &quot;s&quot; {Pn}\tThe player's username {pn}\tThe username in all lowercase {PN}\tThe username in all UPPERCASE {Dn}\tThe player's Display Name {dn}\tThe Display Name in all lowercase {DN}\tThe Display Name in all UPPERCASE {UID}\tThe player's User ID  ","version":"Next","tagName":"h3"},{"title":"TimerLabel​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#timerlabel","content":" If the main Button Model contains a TextLabel named TimerLabel, it will be used on the SurfaceGui on the Top surface of the ButtonPart as well as the ScreenGui.  UseSpecialColor​  This Tag should only be used on a TimerLabel. If present, it disables the automatic coloring of the TimerLabel.  ","version":"Next","tagName":"h3"},{"title":"HideGui​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#hidegui","content":" Determines whether a timer is displayed on both the surface of the Button as well as on the player's screen. If true, neither will appear.  ","version":"Next","tagName":"h3"},{"title":"Button Activated Objects​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#button-activated-objects","content":" Any BasePart and certain Client Objects containing a Tag named ButtonActivated is considered a Button Activated Object.  By default, a Button Activated Part behaves as follows:  State of corresponding button\tCanCollide\tTransparency\tClient Object StateUnpressed\tfalse\t0.6\tdisabled Pressed\ttrue\t0\tenabled  It should be noted that if 64 or more parts are toggled at once, there will be a single frame delay to improve performance.  ","version":"Next","tagName":"h2"},{"title":"Supported Visual Instances​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#supported-visual-instances","content":" Instances of the following classes that are parented to the Button Activated Part will have their Transparency tweened to match the Part's transparency:  Transparency-tweenable instancesDecal Texture SelectionBox SelectionSphere Frame CanvasGroup TextLabel ImageLabel  Instances of the following classes that are parented to the Button Activated Part will have their Enabled property toggled to match the Button Activated Part's collision state:  Enabled toggle instancesBeam ParticleEmitter Fire Sparkles Smoke Trail UIStroke UIGradient  ","version":"Next","tagName":"h3"},{"title":"Button Activated Part Configurations​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#button-activated-part-configurations","content":" ","version":"Next","tagName":"h2"},{"title":"ColorOverride​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#coloroverride","content":" If a Color3 attribute called ColorOverride is parented to a Button Activated Part, the part will be considered a Button Activated Object of that Color. If a ButtonPart has this attribute, its functionality may be toggled by other Buttons.  Below are Tags that may be added to a Button Activated Part.  ","version":"Next","tagName":"h3"},{"title":"FullHidePlatform​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#fullhideplatform","content":" Sets the Unpressed Transparency to 1.  ","version":"Next","tagName":"h3"},{"title":"SetTransparency​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#settransparency","content":" Attribute. Its value is the Transparency of the Button Activated Part in the Unpressed state.  ","version":"Next","tagName":"h3"},{"title":"IgnoreTransparency​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#ignoretransparency","content":" Transparency of the Button Activated Part will not be changed and remains in its default state.  ","version":"Next","tagName":"h3"},{"title":"Invisible​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#invisible","content":" The Transparency of the Button Activated Part is always 1.  ","version":"Next","tagName":"h3"},{"title":"IgnoreCanCollide​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#ignorecancollide","content":" The CanCollide property of the Button Activated Part will not be toggled and remains in its default state.  ","version":"Next","tagName":"h3"},{"title":"IgnoreEnabled​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#ignoreenabled","content":" Enabled toggle instances will not have their Enabled property toggled.  ","version":"Next","tagName":"h3"},{"title":"InvertPlatform​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#invertplatform","content":" Swaps the collision and Transparency data in the Pressed and Unpressed states.  ","version":"Next","tagName":"h3"},{"title":"IgnoreInitialActivate​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#ignoreinitialactivate","content":" The Button Activated Part will retain its properties as they were in Studio, instead of having its collision and Transparency match the default Unpressed state. If the Button is deactivated by any means, it will behave identically to any other Button Activated Part that does not have this Tag.  ","version":"Next","tagName":"h3"},{"title":"IgnoreAll​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#ignoreall","content":" The Button Activated Part will not have its collision or Transparency changed.  ","version":"Next","tagName":"h3"},{"title":"Unsupported Client Objects​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#unsupported-client-objects","content":" Below is a list of all the client objects that cannot currently be toggled by a Button.  Unsupported Client Objects\tNotesVanishers\tInconsistent behaviour when toggled while vanishing ","version":"Next","tagName":"h2"},{"title":"Trip Parts","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/trip-parts","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Trip Parts","url":"/kit/docs/client-objects/trip-parts#use-cases","content":" Trip parts can be used to make the player forcefully sit down, useful when making things such as slides.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Trip Parts","url":"/kit/docs/client-objects/trip-parts#configuration","content":" Name\tDefault Value\tDescriptionCooldown\t1\tDelay between being able to use the Trip Part again. ","version":"Next","tagName":"h2"},{"title":"Kill Bricks","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/killbricks","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Kill Bricks","url":"/kit/docs/client-objects/killbricks#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Kill Bricks","url":"/kit/docs/client-objects/killbricks#configuration","content":" Below are Tags and their respective damage outputs per touch. Neither damage nor healing bypass ForceField.  Tag\tDamagekills\t5 double\t10 ouch\t20 instakills\tinfinite heals\tHeals the player to full health  Damage may be dynamically set by adding a number Attribute called damage (case sensitive) to the part. ","version":"Next","tagName":"h2"},{"title":"Turrets","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/turrets","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Turrets","url":"/kit/docs/client-objects/turrets#use-cases","content":" Turrets can be used to shoot projectiles the player has to avoid, or to shoot out other objects such as platforms or other client objects.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Turrets","url":"/kit/docs/client-objects/turrets#configuration","content":" Name\tDefault Value\tDescriptionDamage\t5\tHow much damage the bullet will deal upon impact with the player. Note that only parts named &quot;Bullet&quot; will deal damage. DestroyOnTouch\ttrue\tWhen true, the bullet will be destroyed upon impact with the player. If you are making the turret shoot out anything the player should be able to interact with, this should be set to false. FireRate\t1\tThe amount of bullets that will be shot per second. MaxLifetime\t5\tThe maximum amount of time in seconds that bullets should exist for. Bullets will automatically despawn after this time if they haven't already been destroyed. Range\t50\tThe turret's maximum activation range, measured in studs. If the player is further away than this value, the turret will not fire. Speed\t50\tThe speed that fired bullets will move at, measured in studs per second  ","version":"Next","tagName":"h2"},{"title":"Additional notes​","type":1,"pageTitle":"Turrets","url":"/kit/docs/client-objects/turrets#additional-notes","content":" When making complex bullets (e.g. firing other client objects), you should keep in mind that the &quot;main&quot; part of the bullet will be automatically positioned at the turret's position and rotation when firing, moving all other parts welded to it as well. The main part is determined by going through these steps and picking the first one that applies:  The bullet model's PrimaryPartA part inside the bullet model named &quot;Bullet&quot;If neither of these apply, a default bullet will be used as a failsafe. ","version":"Next","tagName":"h2"},{"title":"Ziplines","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/ziplines","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Ziplines","url":"/kit/docs/client-objects/ziplines#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Ziplines","url":"/kit/docs/client-objects/ziplines#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Vines","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/vines","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Vines","url":"/kit/docs/client-objects/vines#use-cases","content":" W.I.P.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Vines","url":"/kit/docs/client-objects/vines#configuration","content":" Name\tDefault Value\tDescriptionAllowJumpDismount\ttrue\tDetermines whether the vine can be dismounted by jumping KeepMomentum\ttrue\tWhen true, objects will retain their momentum upon grabbing the vine RespawnTime\t1\tThe time it takes for the vine's AttachmentPart to re-appear after the player dismounts it RopeLength\t8\tThe length of the vine's rope (in studs) ","version":"Next","tagName":"h2"},{"title":"Vanishers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/vanishers","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Vanishers","url":"/kit/docs/client-objects/vanishers#use-cases","content":" Vanishers can be used to create varying types of gameplay, puzzles, or contraptions.  ","version":"Next","tagName":"h2"},{"title":"Vanish modes​","type":1,"pageTitle":"Vanishers","url":"/kit/docs/client-objects/vanishers#vanish-modes","content":" Each VanishMode has unique logic.  Mode\tDescriptionFade\tSmoothly fades. Blink\tFlashes multiple times before vanishing. Constant\tGradually fades depending on contact. If not in contact, regenerates. Shrink\tShrinks the part away in a set direction.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Vanishers","url":"/kit/docs/client-objects/vanishers#configuration","content":" Name\tDefault Value\tDescriptionBlinkCount\t3\tAmount of blinks in Blink mode ConstantNoRecovery\tfalse\tPrevents recovery in Constant mode when not in contact Invert\tfalse\tReverses behavior: visible becomes invisible and vice versa RespawnFade\tfalse\tWhether the part fades in when respawning RespawnTime\t2\tSeconds before the part reappears ShrinkDirection\tCenter\tDirection of shrinking (Top, Bottom, Left, Right, Front, Back, Center) VanishMode\tFade\tVanish behavior (Fade, Blink, Constant, Shrink) ","version":"Next","tagName":"h2"},{"title":"Falling Platforms","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/falling-platforms","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Falling Platforms","url":"/kit/docs/client-objects/falling-platforms#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Falling Platforms","url":"/kit/docs/client-objects/falling-platforms#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Lighting Changers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/lighting-changers","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Lighting Changers","url":"/kit/docs/client-objects/lighting-changers#use-cases","content":" LightingChangers are used for cinematic effects and help bring together the mood of towers. Dark lighting can create a gloomy feel. In contrast, bright and vibrant lighting can heighten the final stretch of a tower.  LightingChangers can be activated by Pushbox, and thus be used in Pushbox contraptions.  ","version":"Next","tagName":"h2"},{"title":"Lighting Module​","type":1,"pageTitle":"Lighting Changers","url":"/kit/docs/client-objects/lighting-changers#lighting-module","content":" LightingChangers are configured by a Lighting ModuleScript inside theLightingChangerConfiguration that looks like this:  --!strict local Change = require(game:GetService(&quot;ReplicatedStorage&quot;).Framework.Kit.Repository.Visual.LightingChanger.TypeDefs) -- DON'T TOUCH THE LINE ABOVE -- -- DON'T TOUCH THE LINE ABOVE -- return Change &quot;Atmosphere&quot; { TweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), Configuration = { Enabled = false, }, }   Parentheses are omitted for brevity, but it is okay to write this:  return Change(&quot;Atmosphere&quot;)({ TweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), Configuration = { Enabled = false, }, })   For ergonomics, the LightingChanger repository type definitions exports a helperChange function that can be used to enforce and create a newLightingConfiguration.  This Change function is roughly of type:  type Default = &quot;PlaceDefault&quot; | &quot;TowerDefault&quot; | string type SupportedLightingObjects = { ColorCorrectionEffect: ColorCorrectionEffect | APIDump.ColorCorrectionEffect, BlurEffect: BlurEffect | APIDump.BlurEffect, Lighting: Lighting | APIDump.Lighting, BloomEffect: BloomEffect | APIDump.BloomEffect, DepthOfFieldEffect: DepthOfFieldEffect | APIDump.DepthOfFieldEffect, Atmosphere: Atmosphere | APIDump.Atmosphere, Sky: Sky | APIDump.Sky, } type ChangeProps&lt;T&gt; = { Configuration: T?, SetDefault: Default?, UseDefault: Default?, TweenInfo: TweenInfo?, } function Change&lt;T: keyof&lt;SupportedLightingObjects&gt;&gt;( lightingObject: T ): (props: ChangeProps&lt;SupportedLightingObjects[T]&gt;) -&gt; LightingManager.LightingConfiguration   ","version":"Next","tagName":"h2"},{"title":"Supported Lighting Objects​","type":1,"pageTitle":"Lighting Changers","url":"/kit/docs/client-objects/lighting-changers#supported-lighting-objects","content":" The following lighting object names, which correspond to actual instances under the Lighting service, can be specified as the first argument:  Name\tConfigurable Properties\tAdditional NotesConfiguration\tBrightness, Contrast, Saturation, TintColor BlurEffect\tSize Lighting\tAmbient, Brightness, ClockTime, ColorShift_Bottom, ColorShift_Top, EnvironmentDiffuseScale, EnvironmentSpecularScale, ExposureCompensation, FogColor, FogEnd, FogStart, GeographicLatitude, GlobalShadows, OutdoorAmbient, ShadowSoftness, TimeOfDay BloomEffect\tIntensity, Size, Threshold DepthOfFieldEffect\tFarIntensity, FocusDistance, InFocusRadius, NearIntensity Atmosphere\tEnabled, Density, Offset, Color, Decay, Glare, Haze\tEnabled toggles if the Atmosphere effect is parented to Lighting. Sky\tMoonAngularSize, MoonTextureId, SkyboxBk, SkyboxDn, SkyboxFt, SkyboxLf, SkyboxRt, SkyboxUp, StarCount, SunAngularSize, SunTextureId, SkyboxOrientation\t  ","version":"Next","tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"Lighting Changers","url":"/kit/docs/client-objects/lighting-changers#properties","content":" The second argument is a ChangeProps table that is used to specify the properties that can be changed for a given lighting object.  Name\tType\tDescriptionConfiguration\tInstance | APIDump.Instance | nil\tA table of new properties for the lighting object, OR a reference to an instance of the lighting object to copy it's properties. SetDefault\t&quot;PlaceDefault&quot; | &quot;TowerDefault&quot; | string | nil\tSets the default properties for either the place or the tower. UseDefault\t&quot;PlaceDefault&quot; | &quot;TowerDefault&quot; | string | nil\tUses the default properties of either the place or the tower. TweenInfo\tTweenInfo?\tThe TweenInfo object used to transition the properties of the lighting object. ","version":"Next","tagName":"h3"}],"options":{"id":"default"}}