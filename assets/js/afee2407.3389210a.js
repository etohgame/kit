"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3969],{69086:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"client-objects/buttons","title":"Buttons","description":"Buttons are parts that, when touched by objects allowed via a TouchConfiguration, toggle a set of parts between a Pressed and Unpressed state.","source":"@site/docs/client-objects/buttons.md","sourceDirName":"client-objects","slug":"/client-objects/buttons","permalink":"/kit/docs/client-objects/buttons","draft":false,"unlisted":false,"editUrl":"https://github.com/etohgame/kit/edit/main/docs/client-objects/buttons.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Button Deactivators","permalink":"/kit/docs/client-objects/button-deactivators"},"next":{"title":"Conveyors","permalink":"/kit/docs/client-objects/conveyors"}}');var s=n(74848),c=n(28453);const i={},d="Buttons",o={},l=[{value:"Use Cases",id:"use-cases",level:2},{value:"Configuration",id:"configuration",level:2},{value:"<code>PressedMaterial</code>",id:"pressedmaterial",level:3},{value:"<code>PressOffset</code>",id:"pressoffset",level:3},{value:"<code>Timer</code>",id:"timer",level:3},{value:"<code>TimerDecimalPlaces</code>",id:"timerdecimalplaces",level:3},{value:"<code>TimerText</code>",id:"timertext",level:3},{value:"<code>TimerLabel</code>",id:"timerlabel",level:3},{value:"<code>UseSpecialColor</code>",id:"usespecialcolor",level:4},{value:"<code>HideGui</code>",id:"hidegui",level:3},{value:"Button Activated Objects",id:"button-activated-objects",level:2},{value:"Supported Visual Instances",id:"supported-visual-instances",level:3},{value:"Button Activated Part Configurations",id:"button-activated-part-configurations",level:2},{value:"<code>ColorOverride</code>",id:"coloroverride",level:3},{value:"<code>FullHidePlatform</code>",id:"fullhideplatform",level:3},{value:"<code>SetTransparency</code>",id:"settransparency",level:3},{value:"<code>IgnoreTransparency</code>",id:"ignoretransparency",level:3},{value:"<code>Invisible</code>",id:"invisible",level:3},{value:"<code>IgnoreCanCollide</code>",id:"ignorecancollide",level:3},{value:"<code>IgnoreEnabled</code>",id:"ignoreenabled",level:3},{value:"<code>InvertPlatform</code>",id:"invertplatform",level:3},{value:"<code>IgnoreInitialActivate</code>",id:"ignoreinitialactivate",level:3},{value:"<code>IgnoreAll</code>",id:"ignoreall",level:3},{value:"Unsupported Client Objects",id:"unsupported-client-objects",level:2}];function a(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"buttons",children:"Buttons"})}),"\n",(0,s.jsxs)(t.p,{children:["Buttons are parts that, when touched by objects allowed via a ",(0,s.jsx)(t.code,{children:"TouchConfiguration"}),", toggle a set of parts between a Pressed and Unpressed state."]}),"\n",(0,s.jsxs)(t.p,{children:["Buttons are defined as ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/Model",children:(0,s.jsx)(t.code,{children:"Models"})})," containing a ",(0,s.jsx)(t.code,{children:"ButtonConfiguration"})," and a ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/BasePart",children:(0,s.jsx)(t.code,{children:"BasePart"})})," named ",(0,s.jsx)(t.code,{children:"ButtonPart"}),". By default, Buttons are linked to their corresponding Button Activated Objects if the ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/BasePart#Color",children:(0,s.jsx)(t.code,{children:"Color"})})," of the ",(0,s.jsx)(t.code,{children:"ButtonPart"})," matches that of the Button Activated Object."]}),"\n",(0,s.jsx)(t.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,s.jsx)(t.p,{children:"Buttons may be used to create toggleable parts and objects, or to display text on the player's screen."}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(t.h3,{id:"pressedmaterial",children:(0,s.jsx)(t.code,{children:"PressedMaterial"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/enums/Material",children:(0,s.jsx)(t.code,{children:"Material"})})," of the Button when pressed. ",(0,s.jsx)(t.code,{children:"Neon"})," by default."]}),"\n",(0,s.jsx)(t.h3,{id:"pressoffset",children:(0,s.jsx)(t.code,{children:"PressOffset"})}),"\n",(0,s.jsxs)(t.p,{children:["Consists of two ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/datatypes/Vector3",children:(0,s.jsx)(t.code,{children:"Vector3"})})," values, ",(0,s.jsx)(t.code,{children:"Position"})," and ",(0,s.jsx)(t.code,{children:"Orientation"}),". ",(0,s.jsx)(t.code,{children:"Position"})," is the offset, in Studs, of the ",(0,s.jsx)(t.code,{children:"ButtonPart"}),". ",(0,s.jsx)(t.code,{children:"Orientation"})," is the offset, in degrees, of the ",(0,s.jsx)(t.code,{children:"ButtonPart"}),". The time it takes for the ",(0,s.jsx)(t.code,{children:"ButtonPart"})," to reach the ",(0,s.jsx)(t.code,{children:"Position"})," and ",(0,s.jsx)(t.code,{children:"Orientation"})," may be determined via a ",(0,s.jsx)(t.code,{children:"TweenConfiguration"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"timer",children:(0,s.jsx)(t.code,{children:"Timer"})}),"\n",(0,s.jsxs)(t.p,{children:["The time, in seconds, a Button remains pressed before returning to the unpressed state. If positive, it will display the remaining time on a ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/SurfaceGui",children:(0,s.jsx)(t.code,{children:"SurfaceGui"})})," on the ",(0,s.jsx)(t.code,{children:"Top"})," surface of the ",(0,s.jsx)(t.code,{children:"ButtonPart"})," as well as a ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/ScreenGui",children:(0,s.jsx)(t.code,{children:"ScreenGui"})})," on the player's screen. By default, Buttons do not have timers."]}),"\n",(0,s.jsx)(t.h3,{id:"timerdecimalplaces",children:(0,s.jsx)(t.code,{children:"TimerDecimalPlaces"})}),"\n",(0,s.jsx)(t.p,{children:"The number of decimal places displayed by any timer displays."}),"\n",(0,s.jsx)(t.h3,{id:"timertext",children:(0,s.jsx)(t.code,{children:"TimerText"})}),"\n",(0,s.jsxs)(t.p,{children:["The text that appears on any timer display. Can be any ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/libraries/string",children:(0,s.jsx)(t.code,{children:"string"})}),".\r\nSee ",(0,s.jsx)(t.a,{href:"/api/ClientObjects#formatTimerText",children:"this page"})," for more info."]}),"\n",(0,s.jsx)(t.h3,{id:"timerlabel",children:(0,s.jsx)(t.code,{children:"TimerLabel"})}),"\n",(0,s.jsxs)(t.p,{children:["If the main Button ",(0,s.jsx)(t.code,{children:"Model"})," contains a ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/TextLabel",children:(0,s.jsx)(t.code,{children:"TextLabel"})})," named ",(0,s.jsx)(t.code,{children:"TimerLabel"}),", it will be used on the ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/SurfaceGui",children:(0,s.jsx)(t.code,{children:"SurfaceGui"})})," on the ",(0,s.jsx)(t.code,{children:"Top"})," surface of the ",(0,s.jsx)(t.code,{children:"ButtonPart"})," as well as the ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/ScreenGui",children:(0,s.jsx)(t.code,{children:"ScreenGui"})}),"."]}),"\n",(0,s.jsx)(t.h4,{id:"usespecialcolor",children:(0,s.jsx)(t.code,{children:"UseSpecialColor"})}),"\n",(0,s.jsxs)(t.p,{children:["This ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/CollectionService",children:(0,s.jsx)(t.code,{children:"Tag"})})," should only be used on a ",(0,s.jsx)(t.code,{children:"TimerLabel"}),". If present, it disables the automatic coloring of the ",(0,s.jsx)(t.code,{children:"TimerLabel"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"hidegui",children:(0,s.jsx)(t.code,{children:"HideGui"})}),"\n",(0,s.jsxs)(t.p,{children:["Determines whether a timer is displayed on both the surface of the Button as well as on the player's screen. If ",(0,s.jsx)(t.code,{children:"true"}),", neither will appear."]}),"\n",(0,s.jsx)(t.h2,{id:"button-activated-objects",children:"Button Activated Objects"}),"\n",(0,s.jsxs)(t.p,{children:["Any ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/BasePart",children:(0,s.jsx)(t.code,{children:"BasePart"})})," and certain Client Objects containing a ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/CollectionService",children:(0,s.jsx)(t.code,{children:"Tag"})})," named ",(0,s.jsx)(t.code,{children:"ButtonActivated"})," is considered a Button Activated Object."]}),"\n",(0,s.jsx)(t.p,{children:"By default, a Button Activated Part behaves as follows:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"State of corresponding button"}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/BasePart#CanCollide",children:(0,s.jsx)(t.code,{children:"CanCollide"})})}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/BasePart#Transparency",children:(0,s.jsx)(t.code,{children:"Transparency"})})}),(0,s.jsx)(t.th,{children:"Client Object State"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Unpressed"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"false"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"0.6"})}),(0,s.jsx)(t.td,{children:"disabled"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Pressed"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"true"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"0"})}),(0,s.jsx)(t.td,{children:"enabled"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"It should be noted that if 64 or more parts are toggled at once, there will be a 1 frame delay every 64 parts to improve performance."}),"\n",(0,s.jsx)(t.h3,{id:"supported-visual-instances",children:"Supported Visual Instances"}),"\n",(0,s.jsxs)(t.p,{children:["Instances of the following classes that are parented to the Button Activated Part will have their ",(0,s.jsx)(t.code,{children:"Transparency"})," tweened to match the Part's transparency:"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{children:"Transparency-tweenable instances"})})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/Decal",children:(0,s.jsx)(t.code,{children:"Decal"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/Texture",children:(0,s.jsx)(t.code,{children:"Texture"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/SelectionBox",children:(0,s.jsx)(t.code,{children:"SelectionBox"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/SelectionSphere",children:(0,s.jsx)(t.code,{children:"SelectionSphere"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/Frame",children:(0,s.jsx)(t.code,{children:"Frame"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/CanvasGroup",children:(0,s.jsx)(t.code,{children:"CanvasGroup"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/TextLabel",children:(0,s.jsx)(t.code,{children:"TextLabel"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/ImageLabel",children:(0,s.jsx)(t.code,{children:"ImageLabel"})})})})]})]}),"\n",(0,s.jsxs)(t.p,{children:["Instances of the following classes that are parented to the Button Activated Part will have their ",(0,s.jsx)(t.code,{children:"Enabled"})," property toggled to match the Button Activated Part's collision state:"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{children:"Enabled toggle instances"})})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/Beam",children:(0,s.jsx)(t.code,{children:"Beam"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter",children:(0,s.jsx)(t.code,{children:"ParticleEmitter"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/Fire",children:(0,s.jsx)(t.code,{children:"Fire"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/Sparkles",children:(0,s.jsx)(t.code,{children:"Sparkles"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/Smoke",children:(0,s.jsx)(t.code,{children:"Smoke"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/Trail",children:(0,s.jsx)(t.code,{children:"Trail"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/UIStroke",children:(0,s.jsx)(t.code,{children:"UIStroke"})})})}),(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/UIGradient",children:(0,s.jsx)(t.code,{children:"UIGradient"})})})})]})]}),"\n",(0,s.jsx)(t.h2,{id:"button-activated-part-configurations",children:"Button Activated Part Configurations"}),"\n",(0,s.jsx)(t.h3,{id:"coloroverride",children:(0,s.jsx)(t.code,{children:"ColorOverride"})}),"\n",(0,s.jsxs)(t.p,{children:["If a ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/datatypes/Color3",children:(0,s.jsx)(t.code,{children:"Color3"})})," attribute called ",(0,s.jsx)(t.code,{children:"ColorOverride"})," is parented to a Button Activated Part, the part will be considered a Button Activated Object of that Color. If a ",(0,s.jsx)(t.code,{children:"ButtonPart"})," has this attribute, its functionality may be toggled by other Buttons."]}),"\n",(0,s.jsxs)(t.p,{children:["Below are ",(0,s.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/CollectionService",children:(0,s.jsx)(t.code,{children:"Tags"})})," that may be added to a Button Activated Part."]}),"\n",(0,s.jsx)(t.h3,{id:"fullhideplatform",children:(0,s.jsx)(t.code,{children:"FullHidePlatform"})}),"\n",(0,s.jsxs)(t.p,{children:["Sets the Unpressed ",(0,s.jsx)(t.code,{children:"Transparency"})," to ",(0,s.jsx)(t.code,{children:"1"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"settransparency",children:(0,s.jsx)(t.code,{children:"SetTransparency"})}),"\n",(0,s.jsxs)(t.p,{children:["Attribute. Its value is the ",(0,s.jsx)(t.code,{children:"Transparency"})," of the Button Activated Part in the Unpressed state."]}),"\n",(0,s.jsx)(t.h3,{id:"ignoretransparency",children:(0,s.jsx)(t.code,{children:"IgnoreTransparency"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Transparency"})," of the Button Activated Part will not be changed and remains in its default state."]}),"\n",(0,s.jsx)(t.h3,{id:"invisible",children:(0,s.jsx)(t.code,{children:"Invisible"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"Transparency"})," of the Button Activated Part is always ",(0,s.jsx)(t.code,{children:"1"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"ignorecancollide",children:(0,s.jsx)(t.code,{children:"IgnoreCanCollide"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"CanCollide"})," property of the Button Activated Part will not be toggled and remains in its default state."]}),"\n",(0,s.jsx)(t.h3,{id:"ignoreenabled",children:(0,s.jsx)(t.code,{children:"IgnoreEnabled"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"#supported-visual-instances",children:"Enabled toggle instances"})," will not have their ",(0,s.jsx)(t.code,{children:"Enabled"})," property toggled."]}),"\n",(0,s.jsx)(t.h3,{id:"invertplatform",children:(0,s.jsx)(t.code,{children:"InvertPlatform"})}),"\n",(0,s.jsx)(t.p,{children:"Swaps the collision and Transparency data in the Pressed and Unpressed states."}),"\n",(0,s.jsx)(t.h3,{id:"ignoreinitialactivate",children:(0,s.jsx)(t.code,{children:"IgnoreInitialActivate"})}),"\n",(0,s.jsxs)(t.p,{children:["The Button Activated Part will retain its properties as they were in Studio, instead of having its collision and ",(0,s.jsx)(t.code,{children:"Transparency"})," match the default Unpressed state. If the Button is deactivated by any means, it will behave identically to any other Button Activated Part that does not have this Tag."]}),"\n",(0,s.jsx)(t.h3,{id:"ignoreall",children:(0,s.jsx)(t.code,{children:"IgnoreAll"})}),"\n",(0,s.jsx)(t.p,{children:"The Button Activated Part will not have its collision or Transparency changed."}),"\n",(0,s.jsx)(t.h2,{id:"unsupported-client-objects",children:"Unsupported Client Objects"}),"\n",(0,s.jsx)(t.p,{children:"Below is a list of all the client objects that cannot currently be toggled by a Button."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Unsupported Client Object"}),(0,s.jsx)(t.th,{children:"Notes"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Vanishers"}),(0,s.jsx)(t.td,{children:"Inconsistent behaviour when toggled while vanishing"})]})})]})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>d});var r=n(96540);const s={},c=r.createContext(s);function i(e){const t=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(c.Provider,{value:t},e.children)}}}]);