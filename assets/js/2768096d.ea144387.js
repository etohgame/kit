"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4819],{63116:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"global-configurations/touch-configurations","title":"TouchConfiguration","description":"All client objects that can be interacted with have a TouchConfiguration configuration object parented inside of their regular configuration. This object holds extra settings relating to what objects are allowed to interact with the client object.","source":"@site/docs/global-configurations/touch-configurations.md","sourceDirName":"global-configurations","slug":"/global-configurations/touch-configurations","permalink":"/kit/docs/global-configurations/touch-configurations","draft":false,"unlisted":false,"editUrl":"https://github.com/etohgame/kit/edit/main/docs/global-configurations/touch-configurations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Ziplines","permalink":"/kit/docs/client-objects/ziplines"},"next":{"title":"TweenConfiguration","permalink":"/kit/docs/global-configurations/tween-configurations"}}');var c=n(74848),r=n(28453);const o={},s="TouchConfiguration",l={},a=[{value:"Configuration",id:"configuration",level:2}];function d(t){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...t.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.header,{children:(0,c.jsx)(e.h1,{id:"touchconfiguration",children:"TouchConfiguration"})}),"\n",(0,c.jsxs)(e.p,{children:["All client objects that can be interacted with have a ",(0,c.jsx)(e.code,{children:"TouchConfiguration"})," configuration object parented inside of their regular configuration. This object holds extra settings relating to what objects are allowed to interact with the client object."]}),"\n",(0,c.jsx)(e.h2,{id:"configuration",children:"Configuration"}),"\n",(0,c.jsxs)(e.table,{children:[(0,c.jsx)(e.thead,{children:(0,c.jsxs)(e.tr,{children:[(0,c.jsx)(e.th,{style:{textAlign:"center"},children:"Name"}),(0,c.jsx)(e.th,{style:{textAlign:"center"},children:"Default Value"}),(0,c.jsx)(e.th,{style:{textAlign:"center"},children:"Description"})]})}),(0,c.jsxs)(e.tbody,{children:[(0,c.jsxs)(e.tr,{children:[(0,c.jsx)(e.td,{style:{textAlign:"center"},children:(0,c.jsx)(e.code,{children:"player"})}),(0,c.jsx)(e.td,{style:{textAlign:"center"},children:"true"}),(0,c.jsx)(e.td,{style:{textAlign:"center"},children:"When true, the client object can be interacted with by the player."})]}),(0,c.jsxs)(e.tr,{children:[(0,c.jsx)(e.td,{style:{textAlign:"center"},children:(0,c.jsx)(e.code,{children:"pushbox"})}),(0,c.jsx)(e.td,{style:{textAlign:"center"},children:"true"}),(0,c.jsxs)(e.td,{style:{textAlign:"center"},children:["When true, the client object can be interacted with by ",(0,c.jsx)(e.a,{href:"/kit/docs/client-objects/pushbox-spawners",children:"Pushboxes"}),"."]})]}),(0,c.jsxs)(e.tr,{children:[(0,c.jsx)(e.td,{style:{textAlign:"center"},children:(0,c.jsx)(e.code,{children:"turret"})}),(0,c.jsx)(e.td,{style:{textAlign:"center"},children:"false"}),(0,c.jsxs)(e.td,{style:{textAlign:"center"},children:["When true, the client object can be interacted with by ",(0,c.jsx)(e.a,{href:"/kit/docs/client-objects/turrets",children:"Turret bullets"}),"."]})]}),(0,c.jsxs)(e.tr,{children:[(0,c.jsx)(e.td,{style:{textAlign:"center"},children:(0,c.jsx)(e.code,{children:"balloon"})}),(0,c.jsx)(e.td,{style:{textAlign:"center"},children:"false"}),(0,c.jsxs)(e.td,{style:{textAlign:"center"},children:["When true, the client object can be interacted with by ",(0,c.jsx)(e.a,{href:"/kit/docs/client-objects/balloons",children:"Balloons"}),"."]})]}),(0,c.jsxs)(e.tr,{children:[(0,c.jsx)(e.td,{style:{textAlign:"center"},children:(0,c.jsx)(e.code,{children:"colorSpecific"})}),(0,c.jsx)(e.td,{style:{textAlign:"center"},children:"false"}),(0,c.jsx)(e.td,{style:{textAlign:"center"},children:"When true, the part that interacted with the client object must match the color of the client object to be able to interact with it. This does not affect players."})]}),(0,c.jsxs)(e.tr,{children:[(0,c.jsx)(e.td,{style:{textAlign:"center"},children:(0,c.jsx)(e.code,{children:"canFlip"})}),(0,c.jsx)(e.td,{style:{textAlign:"center"},children:"false"}),(0,c.jsx)(e.td,{style:{textAlign:"center"},children:"When true, the client object can be interacted with using Corner Flips."})]})]})]})]})}function h(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,c.jsx)(e,{...t,children:(0,c.jsx)(d,{...t})}):d(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>o,x:()=>s});var i=n(96540);const c={},r=i.createContext(c);function o(t){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(c):t.components||c:o(t.components),i.createElement(r.Provider,{value:e},t.children)}}}]);