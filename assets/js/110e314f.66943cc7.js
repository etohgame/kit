"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6370],{3900:a=>{a.exports=JSON.parse('{"functions":[{"name":"takeDamage","desc":"See [CharacterManager](/api/CharacterManager#Damage) for more info.","params":[{"name":"damage","desc":"","lua_type":"BasePart | number | string"}],"returns":[],"function_type":"static","source":{"line":84,"path":"mirror/Kit.Utility.Character.luau"}},{"name":"validateDamageBrick","desc":"See [CharacterManager](/api/CharacterManager#ValidateDamageBrick) for more info.","params":[{"name":"brick","desc":"","lua_type":"BasePart"}],"returns":[{"desc":"","lua_type":"(string | number)?\\n"}],"function_type":"static","source":{"line":93,"path":"mirror/Kit.Utility.Character.luau"}},{"name":"getHumanoid","desc":"See [CharacterManager](/api/CharacterManager#GetHumanoid) for more info.","params":[],"returns":[{"desc":"","lua_type":"Humanoid?\\n"}],"function_type":"static","source":{"line":102,"path":"mirror/Kit.Utility.Character.luau"}},{"name":"startBoost","desc":"See [CharacterManager](/api/CharacterManager#StartBoost) for more info.","params":[{"name":"boostData","desc":"","lua_type":"CharacterManager_Types.BoostData"}],"returns":[],"function_type":"static","source":{"line":111,"path":"mirror/Kit.Utility.Character.luau"}},{"name":"updateBoost","desc":"See [CharacterManager](/api/CharacterManager#UpdateBoost) for more info.","params":[{"name":"boostData","desc":"","lua_type":"CharacterManager_Types.BoostData"},{"name":"boostEnded","desc":"","lua_type":"boolean?"}],"returns":[],"function_type":"static","source":{"line":120,"path":"mirror/Kit.Utility.Character.luau"}},{"name":"removeBoost","desc":"See [CharacterManager](/api/CharacterManager#RemoveBoost) for more info.","params":[{"name":"boostData","desc":"","lua_type":"CharacterManager_Types.BoostData"}],"returns":[],"function_type":"static","source":{"line":129,"path":"mirror/Kit.Utility.Character.luau"}},{"name":"getActiveBoosts","desc":"See [CharacterManager](/api/CharacterManager#GetActiveBoosts) for more info.","params":[],"returns":[{"desc":"","lua_type":"{ CharacterManager_Types.BoostData }\\n"}],"function_type":"static","source":{"line":138,"path":"mirror/Kit.Utility.Character.luau"}},{"name":"getActiveBoost","desc":"See [CharacterManager](/api/CharacterManager#GetActiveBoost) for more info.","params":[{"name":"boostType","desc":"","lua_type":"string"},{"name":"isPad","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"CharacterManager_Types.BoostData?\\n"}],"function_type":"static","source":{"line":147,"path":"mirror/Kit.Utility.Character.luau"}},{"name":"changeLighting","desc":"Changes the active lighting based on the given `config`.\\nSee [LightingManager](/api/LightingManager#ChangeLighting) for more info.","params":[{"name":"config","desc":"","lua_type":"LightingManager_Types.LightingConfiguration"},{"name":"scope","desc":"","lua_type":"Scope?"}],"returns":[],"function_type":"static","source":{"line":30,"path":"mirror/Kit.Utility.Lighting.luau"}},{"name":"resetLighting","desc":"Resets all lighting properties back to their default state.","params":[],"returns":[],"function_type":"static","source":{"line":55,"path":"mirror/Kit.Utility.Lighting.luau"}}],"properties":[],"types":[],"name":"Lighting","desc":"A table of utility functions for working with Lighting that can be used to speed up the process of writing repository scripts for client objects.","realm":["Client"],"source":{"line":10,"path":"mirror/Kit.Utility.Lighting.luau"}}')}}]);