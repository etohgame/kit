"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[89],{89230:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"client-objects/balloons","title":"Balloons","description":"Balloon Dispensers attach an object that touches them to a balloon using a rope.","source":"@site/docs/client-objects/balloons.md","sourceDirName":"client-objects","slug":"/client-objects/balloons","permalink":"/kit/docs/client-objects/balloons","draft":false,"unlisted":false,"editUrl":"https://github.com/etohgame/kit/edit/main/docs/client-objects/balloons.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Attachers","permalink":"/kit/docs/client-objects/attachers"},"next":{"title":"Beat Blocks","permalink":"/kit/docs/client-objects/beat-blocks"}}');var o=n(74848),i=n(28453);const l={},r="Balloons",c={},d=[{value:"Use Cases",id:"use-cases",level:2},{value:"Configuration",id:"configuration",level:2}];function a(e){const t={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"balloons",children:"Balloons"})}),"\n",(0,o.jsxs)(t.p,{children:["Balloon Dispensers attach an object that touches them to a balloon using a ",(0,o.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/RopeConstraint",children:"rope"}),".",(0,o.jsx)(t.br,{}),"\n","The balloon is propelled up by a force.",(0,o.jsx)(t.br,{}),"\n","Objects on balloons will be dismounted when the player jumps or when the object/balloon touches a ",(0,o.jsx)(t.a,{href:"/kit/docs/client-objects/dismounters",children:"Dismounter"}),".",(0,o.jsx)(t.br,{}),"\n","Alternatively, they are dismounted when specific conditions are met, which are listed in the ",(0,o.jsx)(t.a,{href:"#configuration",children:"configurations"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["Balloon visuals can be customized by editing the ",(0,o.jsx)(t.code,{children:"BalloonModel"})," inside the balloon dispenser.",(0,o.jsx)(t.br,{}),"\n","Balloon timers can be customized by editing the ",(0,o.jsx)(t.code,{children:"TimerGui"})," inside the balloon's configuration."]}),"\n",(0,o.jsx)(t.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,o.jsx)(t.p,{children:"Balloons can be used to slowly lift the player upwards or downwards while allowing free horizontal movement."}),"\n",(0,o.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Name"}),(0,o.jsx)(t.th,{children:"Default Value"}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"AllowJumpDismount"})}),(0,o.jsx)(t.td,{children:"true"}),(0,o.jsx)(t.td,{children:"Determines whether the balloon can be dismounted by jumping"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"DestroyWhenExpired"})}),(0,o.jsx)(t.td,{children:"true"}),(0,o.jsx)(t.td,{children:"When true, balloons are automatically dismounted upon expiring, otherwise they lose their velocity and do not rise"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"Force"})}),(0,o.jsx)(t.td,{children:"5"}),(0,o.jsx)(t.td,{children:"The velocity at which the balloon rises (or falls, if negative)"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"KeepMomentum"})}),(0,o.jsx)(t.td,{children:"true"}),(0,o.jsx)(t.td,{children:"When true, objects will keep any momentum they had on the balloon after dismounting"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"MaxHeight"})}),(0,o.jsx)(t.td,{children:"0"}),(0,o.jsx)(t.td,{children:"The maximum height difference between the balloon and the dispenser before expiring. Ignored if set to 0."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"RopeLength"})}),(0,o.jsx)(t.td,{children:"8"}),(0,o.jsxs)(t.td,{children:["The length of the balloon's ",(0,o.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/RopeConstraint",children:"rope"})]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"Timer"})}),(0,o.jsx)(t.td,{children:"0"}),(0,o.jsx)(t.td,{children:"The amount of time before the balloon expires automatically (infinite if set to 0)"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>r});var s=n(96540);const o={},i=s.createContext(o);function l(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);