"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9723],{96694:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"client-objects/attachers","title":"Attachers","description":"Attachers are objects that enable other models or parts to \\"attach\\" themselves upon contact.","source":"@site/docs/client-objects/attachers.md","sourceDirName":"client-objects","slug":"/client-objects/attachers","permalink":"/kit/docs/client-objects/attachers","draft":false,"unlisted":false,"editUrl":"https://github.com/etohgame/kit/edit/main/docs/client-objects/attachers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Overview","permalink":"/kit/docs/intro"},"next":{"title":"Balloons","permalink":"/kit/docs/client-objects/balloons"}}');var r=n(74848),c=n(28453);const i={},l="Attachers",o={},a=[{value:"Use Cases",id:"use-cases",level:2},{value:"Configuration",id:"configuration",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"attachers",children:"Attachers"})}),"\n",(0,r.jsx)(t.p,{children:'Attachers are objects that enable other models or parts to "attach" themselves upon contact.'}),"\n",(0,r.jsx)(t.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,r.jsx)(t.p,{children:"Attaching objects (e.g. trails, lights, or spinning killbricks) to the object that interacted with the attacher."}),"\n",(0,r.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Default Value"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"AttachUsingAlign"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"true"}),(0,r.jsxs)(t.td,{style:{textAlign:"center"},children:["If ",(0,r.jsx)(t.code,{children:"false"}),", uses a WeldConstraint to attach the PrimaryPart. Otherwise, it uses an AlignOrientation and AlignPosition object."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"CleanDelay"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"3"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"Time in seconds to wait before cleaning up attachment objects after dismount."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"Cooldown"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"0.5"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"Time in seconds to wait before the Attacher can activate again"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"DismountState"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#Jumping",children:(0,r.jsx)(t.code,{children:"Enum.HumanoidStateType.Jumping"})})}),(0,r.jsxs)(t.td,{style:{textAlign:"center"},children:["The humanoid state that will trigger a dismount. Some dismount states are not allowed, as they never trigger. In those cases, use ",(0,r.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#None",children:(0,r.jsx)(t.code,{children:"Enum.HumanoidStateType.None"})})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"DismountStateEnabled"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"true"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"Whether the dismount state check is enabled."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"Offset"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/datatypes/CFrame",children:(0,r.jsx)(t.code,{children:"CFrame.new(0, 0, -5)"})})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"Offset applied to the primary part when attaching."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"WeldToLimb"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/enums/Limb#Torso",children:(0,r.jsx)(t.code,{children:"Enum.Limb.Torso"})})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"The limb to attach the object to. Ignored if the target is not a player."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var s=n(96540);const r={},c=s.createContext(r);function i(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);